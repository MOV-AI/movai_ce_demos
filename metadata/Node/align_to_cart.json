{
    "Node": {
        "align_to_cart": {
            "Info": "This node is used to align the robot to a TF. The initial TF is usually generated using the apriltag_ros node (with a QR code tag placed on the cart) and a projected TF is generated using the tf_gen node, which is used as a middle man for the align process. The operation is done in 4 steps, using odometry.\n\nStep 1) Starting in point P1, rotate the robot so that the chosen camera (parameter: camera) points to a point in front of the tag (point P2, generated by tf_gen node). \nStep 2) Move the robot in a straight line from point P1 to point P2.\nStep 3) At point P2, rotate the robot so that chosen camera points to the QR code tag.\nStep 4) Move the robot in a straight line towards the tag for a fixed distance (parameter: move_distance_to_tag).",
            "Label": "align_to_cart",
            "LastUpdate": {
                "date": "30/11/2021 at 15:39:12",
                "user": "movai"
            },
            "Launch": true,
            "PackageDepends": "",
            "Parameter": {
                "camera": {
                    "Description": "Camera to be used for tag detection (front or back)",
                    "Type": "string",
                    "Value": "back"
                },
                "final_speed": {
                    "Description": "Velocity (m/s) for the last linear movement towards the tag",
                    "Type": "number",
                    "Value": "0.05"
                },
                "generated_tag_frame": {
                    "Description": "TF frame name of the generated middle man TF. This is usually generated using the tf_gen node",
                    "Type": "string",
                    "Value": "tf_generated"
                },
                "max_vel_ang": {
                    "Description": "Maximum angular velocity [rad/s]",
                    "Type": "number",
                    "Value": "0.12"
                },
                "max_vel_lin": {
                    "Description": "Maximum linear velocity (x axis) [m/s]",
                    "Type": "number",
                    "Value": "0.5"
                },
                "min_lin1": {
                    "Description": "Minimum distance to move in Step 2 [m/s]",
                    "Type": "number",
                    "Value": "0.01"
                },
                "min_rot": {
                    "Description": "Minimum rotation angle for Step 1 [rad]",
                    "Type": "number",
                    "Value": "0.03"
                },
                "min_rot2": {
                    "Description": "Minimum rotation angle for Step 3 [rad]",
                    "Type": "number",
                    "Value": "0.03"
                },
                "move_distance_to_cart": {
                    "Description": "Maximum distance for linear movement in step 4 (m)",
                    "Type": "number",
                    "Value": "0.4"
                },
                "move_vel1": {
                    "Description": "Linear velocity to move from P1 to P2 in step 1 [m/s]",
                    "Type": "number",
                    "Value": "1"
                },
                "rot_w1": {
                    "Description": "Angular velocity for rotation in step 1 [rad/s]",
                    "Type": "number",
                    "Value": "1"
                },
                "rot_w2": {
                    "Description": "Angular velocity for rotation in Step 3 [rad/s]",
                    "Type": "number",
                    "Value": "1"
                }
            },
            "Path": "",
            "Persistent": false,
            "PortsInst": {
                "cmd_vel_pub": {
                    "Message": "Twist",
                    "Out": {
                        "out": {
                            "Message": "geometry_msgs/Twist"
                        }
                    },
                    "Package": "geometry_msgs",
                    "Template": "ROS1/Publisher"
                },
                "enable_tf_generator": {
                    "Message": "Bool",
                    "Out": {
                        "out": {
                            "Message": "std_msgs/Bool"
                        }
                    },
                    "Package": "std_msgs",
                    "Template": "ROS1/Publisher"
                },
                "gripper_feedback": {
                    "In": {
                        "in": {
                            "Callback": "align_to_cart_gripper_feedback",
                            "Message": "std_msgs/Bool"
                        }
                    },
                    "Message": "Bool",
                    "Package": "std_msgs",
                    "Template": "ROS1/Subscriber"
                },
                "init": {
                    "In": {
                        "in": {
                            "Callback": "align_to_cart_init",
                            "Message": "movai_msgs/Init"
                        }
                    },
                    "Message": "Init",
                    "Package": "movai_msgs",
                    "Template": "MovAI/Init"
                },
                "main_timer": {
                    "In": {
                        "in": {
                            "Callback": "align_to_cart_main_timer",
                            "Message": "movai_msgs/Timer",
                            "Parameter": {
                                "Frequency": 10,
                                "Oneshot": false
                            }
                        }
                    },
                    "Message": "Timer",
                    "Package": "movai_msgs",
                    "Template": "ROS1/Timer"
                },
                "odom_feedback": {
                    "In": {
                        "in": {
                            "Callback": "align_to_cart_odom_feedback",
                            "Message": "nav_msgs/Odometry"
                        }
                    },
                    "Message": "Odometry",
                    "Package": "nav_msgs",
                    "Template": "ROS1/Subscriber"
                },
                "start": {
                    "In": {
                        "in": {
                            "Callback": "place_holder",
                            "Message": "movai_msgs/Transition"
                        }
                    },
                    "Message": "Transition",
                    "Package": "movai_msgs",
                    "Template": "MovAI/TransitionTo"
                },
                "success": {
                    "Message": "Transition",
                    "Out": {
                        "out": {
                            "Message": "movai_msgs/Transition"
                        }
                    },
                    "Package": "movai_msgs",
                    "Template": "MovAI/TransitionFor"
                },
                "tf_sub": {
                    "In": {
                        "in": {
                            "Callback": "align_to_cart_tf_sub",
                            "Message": "movai_msgs/TF",
                            "Parameter": {
                                "Child": "from",
                                "Frequency": 30,
                                "Parent": "base_link"
                            }
                        }
                    },
                    "Message": "TF",
                    "Package": "movai_msgs",
                    "Template": "ROS1/TFSubscriber"
                },
                "timeout": {
                    "Message": "Transition",
                    "Out": {
                        "out": {
                            "Message": "movai_msgs/Transition"
                        }
                    },
                    "Package": "movai_msgs",
                    "Template": "MovAI/TransitionFor"
                },
                "timeout_timer": {
                    "In": {
                        "in": {
                            "Callback": "align_to_cart_timeout_timer",
                            "Message": "movai_msgs/Timer",
                            "Parameter": {
                                "Frequency": 0.1,
                                "Oneshot": false
                            }
                        }
                    },
                    "Message": "Timer",
                    "Package": "movai_msgs",
                    "Template": "ROS1/Timer"
                }
            },
            "Remappable": true,
            "Type": "MovAI/State",
            "User": "",
            "Version": "",
            "VersionDelta": {}
        }
    }
}